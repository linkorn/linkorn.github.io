!function(e){function l(n){if(t[n])return t[n].exports;var i=t[n]={exports:{},id:n,loaded:!1};return e[n].call(i.exports,i,i.exports,l),i.loaded=!0,i.exports}var t={};return l.m=e,l.c=t,l.p="/",l(0)}([function(e,l){"use strict";$(function(){var e=!1;$(window).width()>=992&&(e=!0,skrollr.init({smoothScrolling:!1,mobileDeceleration:.004,forceHeight:!1}));var l=0,t=!0;$(window).scroll(function(e){window.pageYOffset>$("#header").height()&&l<window.pageYOffset&&t?(t=!1,$("#header").animate({top:-$("#header").height()-15+"px"},200)):l>window.pageYOffset&&!t&&(t=!0,$("#header").animate({top:0},200)),l=window.pageYOffset}),$("#bs-navbar a").smoothScroll({easing:"easeOutExpo",speed:1e3});new Waypoint({element:document.getElementById("level1"),handler:function(){$("#level1").addClass("scr")},offset:"70%"}),new Waypoint({element:document.getElementById("level2"),handler:function(){$("#level2").addClass("scr")},offset:"70%"}),new Waypoint({element:document.getElementById("level3"),handler:function(){$("#level3").addClass("scr")},offset:"60%"}),new Waypoint({element:document.getElementById("level4"),handler:function(){$("#level4").addClass("scr")},offset:"60%"}),new Waypoint({element:document.getElementById("level5"),handler:function(){$("#level5").addClass("scr")},offset:"60%"});$(".slick").slick({slidesToShow:5,slidesToScroll:1,prevArrow:'<a class="button slick-prev" href="javascript:;"></a>',nextArrow:'<a class="button slick-next" href="javascript:;"></a>'}),$(window).resize(function(){$(window).width()<992?($("#level1 .img-slider img").css("width",$("#level1 .img-slider").width()/5-5+"px"),$("#level1 .button").css("height",$("#level1 .img-slider").width()/5-5+"px")):($("#level1 .img-slider img").css("width",""),$("#level1 .button").css("height",""))}),$(window).width()<992&&(console.log($("#level1, #level2, #level3, #level4, #level5")),$("#level1, #level2, #level3, #level4, #level5").addClass("scr"),setTimeout(function(){$("#level1 .img-slider img").css("width",$("#level1 .img-slider").width()/5-5+"px"),$("#level1 .button").css("height",$("#level1 .img-slider").width()/5-5+"px")},1e3))})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,